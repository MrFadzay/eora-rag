name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/eora-rag:latest
          ${{ secrets.DOCKER_USERNAME }}/eora-rag:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: eora-rag.ddns.net
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /home/${{ secrets.SERVER_USER }}/eora-rag || exit 1
          export DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
          export GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
          docker compose -f docker-compose.prod.yml pull || exit 1
          docker compose -f docker-compose.prod.yml down
          echo "--- Запуск скрипта для заполнения базы данных ---"
          docker compose -f docker-compose.prod.yml run --rm app python src/seed_database.py --yes || exit 1
          echo "--- Скрипт заполнения базы данных завершен ---"
          docker compose -f docker-compose.prod.yml up -d || exit 1
          docker system prune -f